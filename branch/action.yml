name: 'Check Branch Naming convention'
description: 'Look in Jira to check branch names match with Jira ticket key'
inputs:
  valid-branch-names: # id of input
    description: 'Branches names that are allowed delimited by a pipe (|) e.g. task|test|bugfix|feature|hotfix|epic|release'
    required: true
    default: 'task|test|bugfix|feature|hotfix|epic|release'
  jira-username:
    description: 'Valid user in Jira'
    required: true
  jira-password:
    description: 'password for corresponding username input'
    required: true
  branch_to_check:
    description: 'Branch to check'
    required: false
    default: ${{ github.ref }}
outputs:
  jira_issue_key:
    description: 'Jira issue key'
    value: ${{ steps.run_jira_query.outputs.jira_issue_key }}
  jira_issue_status:
    description: 'Jira issue status fields as a JSON string'
    value: ${{ steps.run_jira_query.outputs.jira_issue_status }}
runs:
  using: "composite"
  steps:
    - name: Setup Python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        # This way we don't interfere with an active setup in the parent workflow
        update-environment: false
    - name: Install dependencies
      shell: bash
      run: |
        ${{ steps.setup-python.outputs.python-path }} -m pip install -r ${{ github.action_path }}/requirements.txt
    # Next query the API to verify it is in the correct state
    - name: PR exists and state in Jira is not Done
      shell: bash
      id: run_jira_query
      run: ${{ steps.setup-python.outputs.python-path }} ${{ github.action_path }}/check_status.py
      env:
        INPUT_BRANCH_TO_CHECK: ${{ inputs.branch_to_check }}
        INPUT_JIRA_USERNAME: ${{ inputs.jira-username }}
        INPUT_JIRA_PASSWORD: ${{ inputs.jira-password }}
        INPUT_VALID_BRANCH_NAMES: ${{ inputs.valid-branch-names }}
